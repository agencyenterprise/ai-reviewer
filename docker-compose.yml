services:
  # PostgreSQL Database Service
  db:
    image: pgvector/pgvector:pg16
    container_name: ai-reviewer-db

    restart: unless-stopped
    environment:
      POSTGRES_DB: ai_reviewer
      POSTGRES_USER: ai_reviewer_user
      POSTGRES_PASSWORD: ai_reviewer_password
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ai_reviewer_user -d ai_reviewer"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - app_network

  # Backend Application Service
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ai-reviewer-api
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://ai_reviewer_user:ai_reviewer_password@db:5432/ai_reviewer
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_DB=ai_reviewer
      - POSTGRES_USER=ai_reviewer_user
      - POSTGRES_PASSWORD=ai_reviewer_password
    env_file:
      - .env
    volumes:
      - ./uploads:/app/uploads
    depends_on:
      - db
    networks:
      - app_network

  # Frontend Application Service
  app:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: ai-reviewer-app
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://api:8000
    depends_on:
      - api
    networks:
      - app_network

volumes:
  postgres_data:
    driver: local

networks:
  app_network:
    driver: bridge
