name: Deploy to Railway

on:
  push:
    branches:
      - feature/deploy-workflow

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/feature/deploy-workflow'
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install uv
        run: pip install uv

      - name: Install dependencies
        run: uv sync --frozen

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Railway CLI
        run: npm install -g @railway/cli

      - name: Setup Railway Infrastructure
        run: |
          if [ -n "${{ secrets.RAILWAY_PROJECT_ID }}" ]; then
            railway link -p ${{ secrets.RAILWAY_PROJECT_ID }}
          else
            provided
            railway init --name "rand-ai-reviewer"
          fi
          
          # Create PostgreSQL service if it doesn't exist
          if ! railway service list | grep -q "Postgres"; then
            echo "Creating PostgreSQL database service..."
            railway add --database postgres
          else
            echo "PostgreSQL service already exists"
          fi
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}

      - name: Deploy Application
        run: railway up --detach
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}

      - name: Wait for deployment
        run: sleep 45

      - name: Run database migrations
        run: railway run uv run alembic upgrade head
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}

      - name: Verify deployment status
        run: |
          echo "Deployment completed successfully!"
          railway status
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}

  build-check:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install uv
        run: pip install uv

      - name: Install dependencies
        run: uv sync --frozen

      - name: Run basic checks
        run: |
          echo "Running basic health checks..."
          uv run python -c "from lib.config.env import config; print('Config loaded successfully')"
          echo "Build check passed!"
