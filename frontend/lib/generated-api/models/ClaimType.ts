/* tslint:disable */
/* eslint-disable */
/**
 * AI Analyst API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 */
export const ClaimType = {
  Policy: 'policy',
  Research: 'research',
  StatisticalData: 'statistical_data',
  ExpertOpinion: 'expert_opinion',
  NewsReport: 'news_report',
  Other: 'other',
} as const;
export type ClaimType = (typeof ClaimType)[keyof typeof ClaimType];

export function instanceOfClaimType(value: any): boolean {
  for (const key in ClaimType) {
    if (Object.prototype.hasOwnProperty.call(ClaimType, key)) {
      if (ClaimType[key as keyof typeof ClaimType] === value) {
        return true;
      }
    }
  }
  return false;
}

export function ClaimTypeFromJSON(json: any): ClaimType {
  return ClaimTypeFromJSONTyped(json, false);
}

export function ClaimTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ClaimType {
  return json as ClaimType;
}

export function ClaimTypeToJSON(value?: ClaimType | null): any {
  return value as any;
}

export function ClaimTypeToJSONTyped(value: any, ignoreDiscriminator: boolean): ClaimType {
  return value as ClaimType;
}
