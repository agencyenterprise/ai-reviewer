/* tslint:disable */
/* eslint-disable */
/**
 * AI Analyst API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DocumentReferenceFactors } from './DocumentReferenceFactors';
import {
  DocumentReferenceFactorsFromJSON,
  DocumentReferenceFactorsFromJSONTyped,
  DocumentReferenceFactorsToJSON,
  DocumentReferenceFactorsToJSONTyped,
} from './DocumentReferenceFactors';

/**
 *
 * @export
 * @interface LiteratureReviewResponseInput
 */
export interface LiteratureReviewResponseInput {
  /**
   * List of relevant references to cite
   * @type {Array<DocumentReferenceFactors>}
   * @memberof LiteratureReviewResponseInput
   */
  relevantReferences?: Array<DocumentReferenceFactors>;
  /**
   * Overall rationale for the literature review recommendations
   * @type {string}
   * @memberof LiteratureReviewResponseInput
   */
  rationale: string;
}

/**
 * Check if a given object implements the LiteratureReviewResponseInput interface.
 */
export function instanceOfLiteratureReviewResponseInput(value: object): value is LiteratureReviewResponseInput {
  if (!('rationale' in value) || value['rationale'] === undefined) return false;
  return true;
}

export function LiteratureReviewResponseInputFromJSON(json: any): LiteratureReviewResponseInput {
  return LiteratureReviewResponseInputFromJSONTyped(json, false);
}

export function LiteratureReviewResponseInputFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): LiteratureReviewResponseInput {
  if (json == null) {
    return json;
  }
  return {
    relevantReferences:
      json['relevant_references'] == null
        ? undefined
        : (json['relevant_references'] as Array<any>).map(DocumentReferenceFactorsFromJSON),
    rationale: json['rationale'],
  };
}

export function LiteratureReviewResponseInputToJSON(json: any): LiteratureReviewResponseInput {
  return LiteratureReviewResponseInputToJSONTyped(json, false);
}

export function LiteratureReviewResponseInputToJSONTyped(
  value?: LiteratureReviewResponseInput | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    relevant_references:
      value['relevantReferences'] == null
        ? undefined
        : (value['relevantReferences'] as Array<any>).map(DocumentReferenceFactorsToJSON),
    rationale: value['rationale'],
  };
}
