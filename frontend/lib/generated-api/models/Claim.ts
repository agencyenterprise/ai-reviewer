/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 *
 * @export
 * @interface Claim
 */
export interface Claim {
  /**
   * The relevant part of the text within the chunk of text that implies the claims
   * @type {string}
   * @memberof Claim
   */
  text: string;
  /**
   * The claim made in the text
   * @type {string}
   * @memberof Claim
   */
  claim: string;
  /**
   * The rationale for why you think the chunk of text implies this claim
   * @type {string}
   * @memberof Claim
   */
  rationale: string;
  /**
   * A boolean value indicating whether the claims needs to be substantiated. If the claim is so obvious that an academic writing would not need to provide a reference for it, then this can be False.
   * @type {boolean}
   * @memberof Claim
   */
  needsSubstantiation: boolean;
}

/**
 * Check if a given object implements the Claim interface.
 */
export function instanceOfClaim(value: object): value is Claim {
  if (!('text' in value) || value['text'] === undefined) return false;
  if (!('claim' in value) || value['claim'] === undefined) return false;
  if (!('rationale' in value) || value['rationale'] === undefined) return false;
  if (!('needsSubstantiation' in value) || value['needsSubstantiation'] === undefined) return false;
  return true;
}

export function ClaimFromJSON(json: any): Claim {
  return ClaimFromJSONTyped(json, false);
}

export function ClaimFromJSONTyped(json: any, ignoreDiscriminator: boolean): Claim {
  if (json == null) {
    return json;
  }
  return {
    text: json['text'],
    claim: json['claim'],
    rationale: json['rationale'],
    needsSubstantiation: json['needs_substantiation'],
  };
}

export function ClaimToJSON(json: any): Claim {
  return ClaimToJSONTyped(json, false);
}

export function ClaimToJSONTyped(value?: Claim | null, ignoreDiscriminator: boolean = false): any {
  if (value == null) {
    return value;
  }

  return {
    text: value['text'],
    claim: value['claim'],
    rationale: value['rationale'],
    needs_substantiation: value['needsSubstantiation'],
  };
}
