/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 *
 * @export
 * @interface BibliographyItem
 */
export interface BibliographyItem {
  /**
   * The text of the bibliographic item
   * @type {string}
   * @memberof BibliographyItem
   */
  text: string;
  /**
   * A boolean value indicating whether the bibliographic item has an associated supporting document provided by the user
   * @type {boolean}
   * @memberof BibliographyItem
   */
  hasAssociatedSupportingDocument: boolean;
  /**
   * If the bibliographic item has an associated supporting document, this will be the index of the supporting document in the list of supporting documents provided by the user (index starts at 1), otherwise it will be -1.
   * @type {number}
   * @memberof BibliographyItem
   */
  indexOfAssociatedSupportingDocument: number;
  /**
   * If the bibliographic item has an associated supporting document, this will be the name of the supporting document, otherwise it will be an empty string.
   * @type {string}
   * @memberof BibliographyItem
   */
  nameOfAssociatedSupportingDocument: string;
}

/**
 * Check if a given object implements the BibliographyItem interface.
 */
export function instanceOfBibliographyItem(value: object): value is BibliographyItem {
  if (!('text' in value) || value['text'] === undefined) return false;
  if (!('hasAssociatedSupportingDocument' in value) || value['hasAssociatedSupportingDocument'] === undefined)
    return false;
  if (!('indexOfAssociatedSupportingDocument' in value) || value['indexOfAssociatedSupportingDocument'] === undefined)
    return false;
  if (!('nameOfAssociatedSupportingDocument' in value) || value['nameOfAssociatedSupportingDocument'] === undefined)
    return false;
  return true;
}

export function BibliographyItemFromJSON(json: any): BibliographyItem {
  return BibliographyItemFromJSONTyped(json, false);
}

export function BibliographyItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): BibliographyItem {
  if (json == null) {
    return json;
  }
  return {
    text: json['text'],
    hasAssociatedSupportingDocument: json['hasAssociatedSupportingDocument'],
    indexOfAssociatedSupportingDocument: json['indexOfAssociatedSupportingDocument'],
    nameOfAssociatedSupportingDocument: json['nameOfAssociatedSupportingDocument'],
  };
}

export function BibliographyItemToJSON(json: any): BibliographyItem {
  return BibliographyItemToJSONTyped(json, false);
}

export function BibliographyItemToJSONTyped(
  value?: BibliographyItem | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    text: value['text'],
    hasAssociatedSupportingDocument: value['hasAssociatedSupportingDocument'],
    indexOfAssociatedSupportingDocument: value['indexOfAssociatedSupportingDocument'],
    nameOfAssociatedSupportingDocument: value['nameOfAssociatedSupportingDocument'],
  };
}
