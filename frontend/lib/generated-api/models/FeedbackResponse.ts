/* tslint:disable */
/* eslint-disable */
/**
 * AI Analyst API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { FeedbackType } from './FeedbackType';
import {
  FeedbackTypeFromJSON,
  FeedbackTypeFromJSONTyped,
  FeedbackTypeToJSON,
  FeedbackTypeToJSONTyped,
} from './FeedbackType';

/**
 * Response model for feedback
 * @export
 * @interface FeedbackResponse
 */
export interface FeedbackResponse {
  /**
   *
   * @type {string}
   * @memberof FeedbackResponse
   */
  id: string;
  /**
   *
   * @type {string}
   * @memberof FeedbackResponse
   */
  workflowRunId: string;
  /**
   *
   * @type {{ [key: string]: any; }}
   * @memberof FeedbackResponse
   */
  entityPath: { [key: string]: any };
  /**
   *
   * @type {FeedbackType}
   * @memberof FeedbackResponse
   */
  feedbackType: FeedbackType;
  /**
   *
   * @type {string}
   * @memberof FeedbackResponse
   */
  feedbackText: string | null;
  /**
   *
   * @type {string}
   * @memberof FeedbackResponse
   */
  createdAt: string;
  /**
   *
   * @type {string}
   * @memberof FeedbackResponse
   */
  updatedAt: string;
}

/**
 * Check if a given object implements the FeedbackResponse interface.
 */
export function instanceOfFeedbackResponse(value: object): value is FeedbackResponse {
  if (!('id' in value) || value['id'] === undefined) return false;
  if (!('workflowRunId' in value) || value['workflowRunId'] === undefined) return false;
  if (!('entityPath' in value) || value['entityPath'] === undefined) return false;
  if (!('feedbackType' in value) || value['feedbackType'] === undefined) return false;
  if (!('feedbackText' in value) || value['feedbackText'] === undefined) return false;
  if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
  if (!('updatedAt' in value) || value['updatedAt'] === undefined) return false;
  return true;
}

export function FeedbackResponseFromJSON(json: any): FeedbackResponse {
  return FeedbackResponseFromJSONTyped(json, false);
}

export function FeedbackResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): FeedbackResponse {
  if (json == null) {
    return json;
  }
  return {
    id: json['id'],
    workflowRunId: json['workflow_run_id'],
    entityPath: json['entity_path'],
    feedbackType: FeedbackTypeFromJSON(json['feedback_type']),
    feedbackText: json['feedback_text'],
    createdAt: json['created_at'],
    updatedAt: json['updated_at'],
  };
}

export function FeedbackResponseToJSON(json: any): FeedbackResponse {
  return FeedbackResponseToJSONTyped(json, false);
}

export function FeedbackResponseToJSONTyped(
  value?: FeedbackResponse | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    id: value['id'],
    workflow_run_id: value['workflowRunId'],
    entity_path: value['entityPath'],
    feedback_type: FeedbackTypeToJSON(value['feedbackType']),
    feedback_text: value['feedbackText'],
    created_at: value['createdAt'],
    updated_at: value['updatedAt'],
  };
}
