/* tslint:disable */
/* eslint-disable */
/**
 * AI Analyst API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DocumentChunkInput } from './DocumentChunkInput';
import {
  DocumentChunkInputFromJSON,
  DocumentChunkInputFromJSONTyped,
  DocumentChunkInputToJSON,
  DocumentChunkInputToJSONTyped,
} from './DocumentChunkInput';
import type { FileDocument } from './FileDocument';
import {
  FileDocumentFromJSON,
  FileDocumentFromJSONTyped,
  FileDocumentToJSON,
  FileDocumentToJSONTyped,
} from './FileDocument';
import type { BibliographyItem } from './BibliographyItem';
import {
  BibliographyItemFromJSON,
  BibliographyItemFromJSONTyped,
  BibliographyItemToJSON,
  BibliographyItemToJSONTyped,
} from './BibliographyItem';
import type { LiteratureReviewResponseInput } from './LiteratureReviewResponseInput';
import {
  LiteratureReviewResponseInputFromJSON,
  LiteratureReviewResponseInputFromJSONTyped,
  LiteratureReviewResponseInputToJSON,
  LiteratureReviewResponseInputToJSONTyped,
} from './LiteratureReviewResponseInput';
import type { WorkflowError } from './WorkflowError';
import {
  WorkflowErrorFromJSON,
  WorkflowErrorFromJSONTyped,
  WorkflowErrorToJSON,
  WorkflowErrorToJSONTyped,
} from './WorkflowError';
import type { SubstantiationWorkflowConfig } from './SubstantiationWorkflowConfig';
import {
  SubstantiationWorkflowConfigFromJSON,
  SubstantiationWorkflowConfigFromJSONTyped,
  SubstantiationWorkflowConfigToJSON,
  SubstantiationWorkflowConfigToJSONTyped,
} from './SubstantiationWorkflowConfig';
import type { DocumentSummary } from './DocumentSummary';
import {
  DocumentSummaryFromJSON,
  DocumentSummaryFromJSONTyped,
  DocumentSummaryToJSON,
  DocumentSummaryToJSONTyped,
} from './DocumentSummary';

/**
 *
 * @export
 * @interface ClaimSubstantiatorStateInput
 */
export interface ClaimSubstantiatorStateInput {
  /**
   *
   * @type {FileDocument}
   * @memberof ClaimSubstantiatorStateInput
   */
  file: FileDocument;
  /**
   *
   * @type {Array<FileDocument>}
   * @memberof ClaimSubstantiatorStateInput
   */
  supportingFiles?: Array<FileDocument> | null;
  /**
   *
   * @type {SubstantiationWorkflowConfig}
   * @memberof ClaimSubstantiatorStateInput
   */
  config: SubstantiationWorkflowConfig;
  /**
   *
   * @type {string}
   * @memberof ClaimSubstantiatorStateInput
   */
  workflowRunId?: string | null;
  /**
   *
   * @type {Array<BibliographyItem>}
   * @memberof ClaimSubstantiatorStateInput
   */
  references?: Array<BibliographyItem>;
  /**
   *
   * @type {Array<DocumentChunkInput>}
   * @memberof ClaimSubstantiatorStateInput
   */
  chunks?: Array<DocumentChunkInput>;
  /**
   * Errors that occurred during the processing of the document.
   * @type {Array<WorkflowError>}
   * @memberof ClaimSubstantiatorStateInput
   */
  errors?: Array<WorkflowError>;
  /**
   *
   * @type {LiteratureReviewResponseInput}
   * @memberof ClaimSubstantiatorStateInput
   */
  literatureReview?: LiteratureReviewResponseInput | null;
  /**
   *
   * @type {DocumentSummary}
   * @memberof ClaimSubstantiatorStateInput
   */
  mainDocumentSummary?: DocumentSummary | null;
  /**
   *
   * @type {{ [key: string]: DocumentSummary; }}
   * @memberof ClaimSubstantiatorStateInput
   */
  supportingDocumentsSummaries?: { [key: string]: DocumentSummary } | null;
  /**
   *
   * @type {{ [key: string]: { [key: string]: any; }; }}
   * @memberof ClaimSubstantiatorStateInput
   */
  liveReportsAnalysis?: { [key: string]: { [key: string]: any } } | null;
}

/**
 * Check if a given object implements the ClaimSubstantiatorStateInput interface.
 */
export function instanceOfClaimSubstantiatorStateInput(value: object): value is ClaimSubstantiatorStateInput {
  if (!('file' in value) || value['file'] === undefined) return false;
  if (!('config' in value) || value['config'] === undefined) return false;
  return true;
}

export function ClaimSubstantiatorStateInputFromJSON(json: any): ClaimSubstantiatorStateInput {
  return ClaimSubstantiatorStateInputFromJSONTyped(json, false);
}

export function ClaimSubstantiatorStateInputFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): ClaimSubstantiatorStateInput {
  if (json == null) {
    return json;
  }
  return {
    file: FileDocumentFromJSON(json['file']),
    supportingFiles:
      json['supporting_files'] == null ? undefined : (json['supporting_files'] as Array<any>).map(FileDocumentFromJSON),
    config: SubstantiationWorkflowConfigFromJSON(json['config']),
    workflowRunId: json['workflow_run_id'] == null ? undefined : json['workflow_run_id'],
    references:
      json['references'] == null ? undefined : (json['references'] as Array<any>).map(BibliographyItemFromJSON),
    chunks: json['chunks'] == null ? undefined : (json['chunks'] as Array<any>).map(DocumentChunkInputFromJSON),
    errors: json['errors'] == null ? undefined : (json['errors'] as Array<any>).map(WorkflowErrorFromJSON),
    literatureReview:
      json['literature_review'] == null ? undefined : LiteratureReviewResponseInputFromJSON(json['literature_review']),
    mainDocumentSummary:
      json['main_document_summary'] == null ? undefined : DocumentSummaryFromJSON(json['main_document_summary']),
    supportingDocumentsSummaries:
      json['supporting_documents_summaries'] == null
        ? undefined
        : mapValues(json['supporting_documents_summaries'], DocumentSummaryFromJSON),
    liveReportsAnalysis: json['live_reports_analysis'] == null ? undefined : json['live_reports_analysis'],
  };
}

export function ClaimSubstantiatorStateInputToJSON(json: any): ClaimSubstantiatorStateInput {
  return ClaimSubstantiatorStateInputToJSONTyped(json, false);
}

export function ClaimSubstantiatorStateInputToJSONTyped(
  value?: ClaimSubstantiatorStateInput | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    file: FileDocumentToJSON(value['file']),
    supporting_files:
      value['supportingFiles'] == null ? undefined : (value['supportingFiles'] as Array<any>).map(FileDocumentToJSON),
    config: SubstantiationWorkflowConfigToJSON(value['config']),
    workflow_run_id: value['workflowRunId'],
    references:
      value['references'] == null ? undefined : (value['references'] as Array<any>).map(BibliographyItemToJSON),
    chunks: value['chunks'] == null ? undefined : (value['chunks'] as Array<any>).map(DocumentChunkInputToJSON),
    errors: value['errors'] == null ? undefined : (value['errors'] as Array<any>).map(WorkflowErrorToJSON),
    literature_review: LiteratureReviewResponseInputToJSON(value['literatureReview']),
    main_document_summary: DocumentSummaryToJSON(value['mainDocumentSummary']),
    supporting_documents_summaries:
      value['supportingDocumentsSummaries'] == null
        ? undefined
        : mapValues(value['supportingDocumentsSummaries'], DocumentSummaryToJSON),
    live_reports_analysis: value['liveReportsAnalysis'],
  };
}
