/* tslint:disable */
/* eslint-disable */
/**
 * AI Analyst API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Generic request model for any entity feedback
 * @export
 * @interface FeedbackRequest
 */
export interface FeedbackRequest {
  /**
   *
   * @type {string}
   * @memberof FeedbackRequest
   */
  workflowRunId: string;
  /**
   * JSONB path identifying the entity
   * @type {{ [key: string]: any; }}
   * @memberof FeedbackRequest
   */
  entityPath: { [key: string]: any };
  /**
   *
   * @type {string}
   * @memberof FeedbackRequest
   */
  feedbackType: string;
  /**
   *
   * @type {string}
   * @memberof FeedbackRequest
   */
  feedbackText?: string | null;
}

/**
 * Check if a given object implements the FeedbackRequest interface.
 */
export function instanceOfFeedbackRequest(value: object): value is FeedbackRequest {
  if (!('workflowRunId' in value) || value['workflowRunId'] === undefined) return false;
  if (!('entityPath' in value) || value['entityPath'] === undefined) return false;
  if (!('feedbackType' in value) || value['feedbackType'] === undefined) return false;
  return true;
}

export function FeedbackRequestFromJSON(json: any): FeedbackRequest {
  return FeedbackRequestFromJSONTyped(json, false);
}

export function FeedbackRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): FeedbackRequest {
  if (json == null) {
    return json;
  }
  return {
    workflowRunId: json['workflow_run_id'],
    entityPath: json['entity_path'],
    feedbackType: json['feedback_type'],
    feedbackText: json['feedback_text'] == null ? undefined : json['feedback_text'],
  };
}

export function FeedbackRequestToJSON(json: any): FeedbackRequest {
  return FeedbackRequestToJSONTyped(json, false);
}

export function FeedbackRequestToJSONTyped(value?: FeedbackRequest | null, ignoreDiscriminator: boolean = false): any {
  if (value == null) {
    return value;
  }

  return {
    workflow_run_id: value['workflowRunId'],
    entity_path: value['entityPath'],
    feedback_type: value['feedbackType'],
    feedback_text: value['feedbackText'],
  };
}
