/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ClaimSubstantiationResultWithClaimIndex } from './ClaimSubstantiationResultWithClaimIndex';
import {
  ClaimSubstantiationResultWithClaimIndexFromJSON,
  ClaimSubstantiationResultWithClaimIndexFromJSONTyped,
  ClaimSubstantiationResultWithClaimIndexToJSON,
  ClaimSubstantiationResultWithClaimIndexToJSONTyped,
} from './ClaimSubstantiationResultWithClaimIndex';

/**
 * Wrapper for a list of claim substantiation results for a single chunk.
 *
 * openapi-generator does not support List[List[T]] so we need to wrap the list of substantiations in a single model.
 * @export
 * @interface ClaimSubstantiationChunk
 */
export interface ClaimSubstantiationChunk {
  /**
   *
   * @type {Array<ClaimSubstantiationResultWithClaimIndex>}
   * @memberof ClaimSubstantiationChunk
   */
  substantiations: Array<ClaimSubstantiationResultWithClaimIndex>;
}

/**
 * Check if a given object implements the ClaimSubstantiationChunk interface.
 */
export function instanceOfClaimSubstantiationChunk(value: object): value is ClaimSubstantiationChunk {
  if (!('substantiations' in value) || value['substantiations'] === undefined) return false;
  return true;
}

export function ClaimSubstantiationChunkFromJSON(json: any): ClaimSubstantiationChunk {
  return ClaimSubstantiationChunkFromJSONTyped(json, false);
}

export function ClaimSubstantiationChunkFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): ClaimSubstantiationChunk {
  if (json == null) {
    return json;
  }
  return {
    substantiations: (json['substantiations'] as Array<any>).map(ClaimSubstantiationResultWithClaimIndexFromJSON),
  };
}

export function ClaimSubstantiationChunkToJSON(json: any): ClaimSubstantiationChunk {
  return ClaimSubstantiationChunkToJSONTyped(json, false);
}

export function ClaimSubstantiationChunkToJSONTyped(
  value?: ClaimSubstantiationChunk | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    substantiations: (value['substantiations'] as Array<any>).map(ClaimSubstantiationResultWithClaimIndexToJSON),
  };
}
