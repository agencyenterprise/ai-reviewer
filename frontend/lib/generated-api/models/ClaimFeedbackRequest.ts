/* tslint:disable */
/* eslint-disable */
/**
 * AI Analyst API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { FeedbackType } from './FeedbackType';
import {
  FeedbackTypeFromJSON,
  FeedbackTypeFromJSONTyped,
  FeedbackTypeToJSON,
  FeedbackTypeToJSONTyped,
} from './FeedbackType';

/**
 * Request model for claim feedback
 * @export
 * @interface ClaimFeedbackRequest
 */
export interface ClaimFeedbackRequest {
  /**
   *
   * @type {string}
   * @memberof ClaimFeedbackRequest
   */
  workflowRunId: string;
  /**
   * Zero-based chunk index
   * @type {number}
   * @memberof ClaimFeedbackRequest
   */
  chunkIndex: number;
  /**
   * Zero-based claim index within chunk
   * @type {number}
   * @memberof ClaimFeedbackRequest
   */
  claimIndex: number;
  /**
   *
   * @type {FeedbackType}
   * @memberof ClaimFeedbackRequest
   */
  feedbackType: FeedbackType;
  /**
   *
   * @type {string}
   * @memberof ClaimFeedbackRequest
   */
  feedbackText?: string | null;
}

/**
 * Check if a given object implements the ClaimFeedbackRequest interface.
 */
export function instanceOfClaimFeedbackRequest(value: object): value is ClaimFeedbackRequest {
  if (!('workflowRunId' in value) || value['workflowRunId'] === undefined) return false;
  if (!('chunkIndex' in value) || value['chunkIndex'] === undefined) return false;
  if (!('claimIndex' in value) || value['claimIndex'] === undefined) return false;
  if (!('feedbackType' in value) || value['feedbackType'] === undefined) return false;
  return true;
}

export function ClaimFeedbackRequestFromJSON(json: any): ClaimFeedbackRequest {
  return ClaimFeedbackRequestFromJSONTyped(json, false);
}

export function ClaimFeedbackRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): ClaimFeedbackRequest {
  if (json == null) {
    return json;
  }
  return {
    workflowRunId: json['workflow_run_id'],
    chunkIndex: json['chunk_index'],
    claimIndex: json['claim_index'],
    feedbackType: FeedbackTypeFromJSON(json['feedback_type']),
    feedbackText: json['feedback_text'] == null ? undefined : json['feedback_text'],
  };
}

export function ClaimFeedbackRequestToJSON(json: any): ClaimFeedbackRequest {
  return ClaimFeedbackRequestToJSONTyped(json, false);
}

export function ClaimFeedbackRequestToJSONTyped(
  value?: ClaimFeedbackRequest | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    workflow_run_id: value['workflowRunId'],
    chunk_index: value['chunkIndex'],
    claim_index: value['claimIndex'],
    feedback_type: FeedbackTypeToJSON(value['feedbackType']),
    feedback_text: value['feedbackText'],
  };
}
