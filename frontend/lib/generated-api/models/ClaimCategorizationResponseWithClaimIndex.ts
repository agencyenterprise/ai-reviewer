/* tslint:disable */
/* eslint-disable */
/**
 * AI Analyst API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ClaimCategory } from './ClaimCategory';
import {
  ClaimCategoryFromJSON,
  ClaimCategoryFromJSONTyped,
  ClaimCategoryToJSON,
  ClaimCategoryToJSONTyped,
} from './ClaimCategory';

/**
 *
 * @export
 * @interface ClaimCategorizationResponseWithClaimIndex
 */
export interface ClaimCategorizationResponseWithClaimIndex {
  /**
   * Exact claim text as analyzed.
   * @type {string}
   * @memberof ClaimCategorizationResponseWithClaimIndex
   */
  claim: string;
  /**
   * Assigned category.
   * @type {ClaimCategory}
   * @memberof ClaimCategorizationResponseWithClaimIndex
   */
  claimCategory: ClaimCategory;
  /**
   * One-line reason for the category assignment.
   * @type {string}
   * @memberof ClaimCategorizationResponseWithClaimIndex
   */
  rationale: string;
  /**
   * True if: (a) the sentence contains a citation, OR (b) it asserts reported/established knowledge that originates outside the current document/analysis and would typically require an external source. False for purely internal methods/results/structure.
   * @type {boolean}
   * @memberof ClaimCategorizationResponseWithClaimIndex
   */
  needsExternalVerification: boolean;
  /**
   *
   * @type {number}
   * @memberof ClaimCategorizationResponseWithClaimIndex
   */
  chunkIndex: number;
  /**
   *
   * @type {number}
   * @memberof ClaimCategorizationResponseWithClaimIndex
   */
  claimIndex: number;
}

/**
 * Check if a given object implements the ClaimCategorizationResponseWithClaimIndex interface.
 */
export function instanceOfClaimCategorizationResponseWithClaimIndex(
  value: object,
): value is ClaimCategorizationResponseWithClaimIndex {
  if (!('claim' in value) || value['claim'] === undefined) return false;
  if (!('claimCategory' in value) || value['claimCategory'] === undefined) return false;
  if (!('rationale' in value) || value['rationale'] === undefined) return false;
  if (!('needsExternalVerification' in value) || value['needsExternalVerification'] === undefined) return false;
  if (!('chunkIndex' in value) || value['chunkIndex'] === undefined) return false;
  if (!('claimIndex' in value) || value['claimIndex'] === undefined) return false;
  return true;
}

export function ClaimCategorizationResponseWithClaimIndexFromJSON(
  json: any,
): ClaimCategorizationResponseWithClaimIndex {
  return ClaimCategorizationResponseWithClaimIndexFromJSONTyped(json, false);
}

export function ClaimCategorizationResponseWithClaimIndexFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): ClaimCategorizationResponseWithClaimIndex {
  if (json == null) {
    return json;
  }
  return {
    claim: json['claim'],
    claimCategory: ClaimCategoryFromJSON(json['claim_category']),
    rationale: json['rationale'],
    needsExternalVerification: json['needs_external_verification'],
    chunkIndex: json['chunk_index'],
    claimIndex: json['claim_index'],
  };
}

export function ClaimCategorizationResponseWithClaimIndexToJSON(json: any): ClaimCategorizationResponseWithClaimIndex {
  return ClaimCategorizationResponseWithClaimIndexToJSONTyped(json, false);
}

export function ClaimCategorizationResponseWithClaimIndexToJSONTyped(
  value?: ClaimCategorizationResponseWithClaimIndex | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    claim: value['claim'],
    claim_category: ClaimCategoryToJSON(value['claimCategory']),
    rationale: value['rationale'],
    needs_external_verification: value['needsExternalVerification'],
    chunk_index: value['chunkIndex'],
    claim_index: value['claimIndex'],
  };
}
