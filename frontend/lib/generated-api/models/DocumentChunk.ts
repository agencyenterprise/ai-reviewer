/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Claims } from './Claims';
import { ClaimsFromJSON, ClaimsFromJSONTyped, ClaimsToJSON, ClaimsToJSONTyped } from './Claims';
import type { CitationResponse } from './CitationResponse';
import {
  CitationResponseFromJSON,
  CitationResponseFromJSONTyped,
  CitationResponseToJSON,
  CitationResponseToJSONTyped,
} from './CitationResponse';
import type { ClaimSubstantiationResultWithClaimIndex } from './ClaimSubstantiationResultWithClaimIndex';
import {
  ClaimSubstantiationResultWithClaimIndexFromJSON,
  ClaimSubstantiationResultWithClaimIndexFromJSONTyped,
  ClaimSubstantiationResultWithClaimIndexToJSON,
  ClaimSubstantiationResultWithClaimIndexToJSONTyped,
} from './ClaimSubstantiationResultWithClaimIndex';

/**
 * Independent chunk response object with all processing results
 * @export
 * @interface DocumentChunk
 */
export interface DocumentChunk {
  /**
   *
   * @type {string}
   * @memberof DocumentChunk
   */
  content: string;
  /**
   *
   * @type {number}
   * @memberof DocumentChunk
   */
  chunkIndex: number;
  /**
   *
   * @type {Claims}
   * @memberof DocumentChunk
   */
  claims?: Claims | null;
  /**
   *
   * @type {CitationResponse}
   * @memberof DocumentChunk
   */
  citations?: CitationResponse | null;
  /**
   *
   * @type {Array<ClaimSubstantiationResultWithClaimIndex>}
   * @memberof DocumentChunk
   */
  substantiations?: Array<ClaimSubstantiationResultWithClaimIndex>;
}

/**
 * Check if a given object implements the DocumentChunk interface.
 */
export function instanceOfDocumentChunk(value: object): value is DocumentChunk {
  if (!('content' in value) || value['content'] === undefined) return false;
  if (!('chunkIndex' in value) || value['chunkIndex'] === undefined) return false;
  return true;
}

export function DocumentChunkFromJSON(json: any): DocumentChunk {
  return DocumentChunkFromJSONTyped(json, false);
}

export function DocumentChunkFromJSONTyped(json: any, ignoreDiscriminator: boolean): DocumentChunk {
  if (json == null) {
    return json;
  }
  return {
    content: json['content'],
    chunkIndex: json['chunk_index'],
    claims: json['claims'] == null ? undefined : ClaimsFromJSON(json['claims']),
    citations: json['citations'] == null ? undefined : CitationResponseFromJSON(json['citations']),
    substantiations:
      json['substantiations'] == null
        ? undefined
        : (json['substantiations'] as Array<any>).map(ClaimSubstantiationResultWithClaimIndexFromJSON),
  };
}

export function DocumentChunkToJSON(json: any): DocumentChunk {
  return DocumentChunkToJSONTyped(json, false);
}

export function DocumentChunkToJSONTyped(value?: DocumentChunk | null, ignoreDiscriminator: boolean = false): any {
  if (value == null) {
    return value;
  }

  return {
    content: value['content'],
    chunk_index: value['chunkIndex'],
    claims: ClaimsToJSON(value['claims']),
    citations: CitationResponseToJSON(value['citations']),
    substantiations:
      value['substantiations'] == null
        ? undefined
        : (value['substantiations'] as Array<any>).map(ClaimSubstantiationResultWithClaimIndexToJSON),
  };
}
