/* tslint:disable */
/* eslint-disable */
/**
 * AI Analyst API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ClaimSubstantiatorStateOutput } from './ClaimSubstantiatorStateOutput';
import {
  ClaimSubstantiatorStateOutputFromJSON,
  ClaimSubstantiatorStateOutputFromJSONTyped,
  ClaimSubstantiatorStateOutputToJSON,
  ClaimSubstantiatorStateOutputToJSONTyped,
} from './ClaimSubstantiatorStateOutput';

/**
 *
 * @export
 * @interface WorkflowRunItem
 */
export interface WorkflowRunItem {
  /**
   *
   * @type {string}
   * @memberof WorkflowRunItem
   */
  threadId: string;
  /**
   *
   * @type {ClaimSubstantiatorStateOutput}
   * @memberof WorkflowRunItem
   */
  state: ClaimSubstantiatorStateOutput | null;
}

/**
 * Check if a given object implements the WorkflowRunItem interface.
 */
export function instanceOfWorkflowRunItem(value: object): value is WorkflowRunItem {
  if (!('threadId' in value) || value['threadId'] === undefined) return false;
  if (!('state' in value) || value['state'] === undefined) return false;
  return true;
}

export function WorkflowRunItemFromJSON(json: any): WorkflowRunItem {
  return WorkflowRunItemFromJSONTyped(json, false);
}

export function WorkflowRunItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): WorkflowRunItem {
  if (json == null) {
    return json;
  }
  return {
    threadId: json['thread_id'],
    state: ClaimSubstantiatorStateOutputFromJSON(json['state']),
  };
}

export function WorkflowRunItemToJSON(json: any): WorkflowRunItem {
  return WorkflowRunItemToJSONTyped(json, false);
}

export function WorkflowRunItemToJSONTyped(value?: WorkflowRunItem | null, ignoreDiscriminator: boolean = false): any {
  if (value == null) {
    return value;
  }

  return {
    thread_id: value['threadId'],
    state: ClaimSubstantiatorStateOutputToJSON(value['state']),
  };
}
