/* tslint:disable */
/* eslint-disable */
/**
 * AI Analyst API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Configuration model for claim substantiation workflow
 * @export
 * @interface SubstantiationWorkflowConfig
 */
export interface SubstantiationWorkflowConfig {
  /**
   * Whether to use Toulmin claim detection approach
   * @type {boolean}
   * @memberof SubstantiationWorkflowConfig
   */
  useToulmin?: boolean;
  /**
   * Whether to run the literature review
   * @type {boolean}
   * @memberof SubstantiationWorkflowConfig
   */
  runLiteratureReview?: boolean;
  /**
   * Whether to run the citation suggestions
   * @type {boolean}
   * @memberof SubstantiationWorkflowConfig
   */
  runSuggestCitations?: boolean;
  /**
   * Use RAG for claim verification
   * @type {boolean}
   * @memberof SubstantiationWorkflowConfig
   */
  useRag?: boolean;
  /**
   * Whether to run the live reports analysis
   * @type {boolean}
   * @memberof SubstantiationWorkflowConfig
   */
  runLiveReports?: boolean;
  /**
   *
   * @type {Date}
   * @memberof SubstantiationWorkflowConfig
   */
  documentPublicationDate?: Date | null;
  /**
   *
   * @type {Array<number>}
   * @memberof SubstantiationWorkflowConfig
   */
  targetChunkIndices?: Array<number> | null;
  /**
   *
   * @type {Array<string>}
   * @memberof SubstantiationWorkflowConfig
   */
  agentsToRun?: Array<string> | null;
  /**
   *
   * @type {string}
   * @memberof SubstantiationWorkflowConfig
   */
  domain?: string | null;
  /**
   *
   * @type {string}
   * @memberof SubstantiationWorkflowConfig
   */
  targetAudience?: string | null;
  /**
   *
   * @type {string}
   * @memberof SubstantiationWorkflowConfig
   */
  sessionId?: string | null;
}

/**
 * Check if a given object implements the SubstantiationWorkflowConfig interface.
 */
export function instanceOfSubstantiationWorkflowConfig(value: object): value is SubstantiationWorkflowConfig {
  return true;
}

export function SubstantiationWorkflowConfigFromJSON(json: any): SubstantiationWorkflowConfig {
  return SubstantiationWorkflowConfigFromJSONTyped(json, false);
}

export function SubstantiationWorkflowConfigFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): SubstantiationWorkflowConfig {
  if (json == null) {
    return json;
  }
  return {
    useToulmin: json['use_toulmin'] == null ? undefined : json['use_toulmin'],
    runLiteratureReview: json['run_literature_review'] == null ? undefined : json['run_literature_review'],
    runSuggestCitations: json['run_suggest_citations'] == null ? undefined : json['run_suggest_citations'],
    useRag: json['use_rag'] == null ? undefined : json['use_rag'],
    runLiveReports: json['run_live_reports'] == null ? undefined : json['run_live_reports'],
    documentPublicationDate:
      json['document_publication_date'] == null ? undefined : new Date(json['document_publication_date']),
    targetChunkIndices: json['target_chunk_indices'] == null ? undefined : json['target_chunk_indices'],
    agentsToRun: json['agents_to_run'] == null ? undefined : json['agents_to_run'],
    domain: json['domain'] == null ? undefined : json['domain'],
    targetAudience: json['target_audience'] == null ? undefined : json['target_audience'],
    sessionId: json['session_id'] == null ? undefined : json['session_id'],
  };
}

export function SubstantiationWorkflowConfigToJSON(json: any): SubstantiationWorkflowConfig {
  return SubstantiationWorkflowConfigToJSONTyped(json, false);
}

export function SubstantiationWorkflowConfigToJSONTyped(
  value?: SubstantiationWorkflowConfig | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    use_toulmin: value['useToulmin'],
    run_literature_review: value['runLiteratureReview'],
    run_suggest_citations: value['runSuggestCitations'],
    use_rag: value['useRag'],
    run_live_reports: value['runLiveReports'],
    document_publication_date:
      value['documentPublicationDate'] === null
        ? null
        : (value['documentPublicationDate'] as any)?.toISOString().substring(0, 10),
    target_chunk_indices: value['targetChunkIndices'],
    agents_to_run: value['agentsToRun'],
    domain: value['domain'],
    target_audience: value['targetAudience'],
    session_id: value['sessionId'],
  };
}
